{"version":3,"sources":["jquery.timepicker.js"],"names":["factory","exports","module","require","define","amd","jQuery","$","_isVisible","elem","el","offsetWidth","offsetHeight","_parseSettings","settings","minTime","_time2int","maxTime","durationTime","scrollDefault","roundingFunction","Date","val","type","timeFormat","match","_twelveHourTime","showOnFocus","showOn","indexOf","splice","disableTimeRanges","length","i","sort","a","b","Math","min","max","_render","self","data","list","remove","useSelect","class","attr","wrapped_list","tabindex","css","display","position","append","noneOption","isArray","parseInt","noneElement","_generateNoneElement","className","addClass","showDuration","step","durStart","start","end","_ONE_DAY","show2400","dr","drCur","drLen","stepFunc","j","timeInt","timeString","_int2time","row","value","text","_moduloSeconds","durationString","_int2duration","duration","prop","_roundAndFormatTime","on","this","trigger","_setTimeValue","hide","after","appendTo","_setSelected","e","off","methods","show","_hideKeyboard","focus","find","removeClass","_selectValue","optionValue","label","error","String","seconds","_closeHandler","target","window","closest","document","unbind","navigator","msMaxTouchPoints","disableTouchKeyboard","_findRow","out","each","obj","jObj","timeValue","_getTimeValue","selected","topDelta","offset","top","outerHeight","scrollTop","forceRoundTime","_formatValue","origin","is","rangeError","roundSeconds","prettyTime","source","_disableTextInputHandler","keyCode","preventDefault","_keydownhandler","call","get","apply","prev","next","_keyuphandler","disableTextInput","setTimeout","typeaheadHighlight","cursor","hasClass","abs","hours","mins","minutes","round","_lang","floor","decimal","push","hr","hrs","join","time","isNaN","getTime","hour","code","output","charAt","getHours","pm","am","PM","AM","getMinutes","getSeconds","toLowerCase","replace","slice","ampmRegex","pattern","RegExp","ampm","isPm","t","wrapHours","delta","_DEFAULTS","closeOnWindowScroll","orientation","selectOnBlur","stopScrollPropagation","init","options","attributeOptions","key","extend","lang","blur","listOffset","left","outerWidth","verticalOrientation","height","topOffset","currentScroll","originalEvent","deltaY","option","getSecondsFromMidnight","relative_date","time_string","setHours","setMinutes","setSeconds","setMilliseconds","isVisible","setTime","removeAttr","removeData","fn","timepicker","method","Array","prototype","arguments"],"mappings":"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","file":"jquery.timepicker.js","sourcesContent":["/*!\n * jquery-timepicker v1.11.14 - A jQuery timepicker plugin inspired by Google Calendar. It supports both mouse and keyboard navigation.\n * Copyright (c) 2015 Jon Thornton - http://jonthornton.github.com/jquery-timepicker/\n * License: MIT\n */\n\n(function(factory) {\n  if (\n    typeof exports === \"object\" &&\n    exports &&\n    typeof module === \"object\" &&\n    module &&\n    module.exports === exports\n  ) {\n    // Browserify. Attach to jQuery module.\n    factory(require(\"jquery\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"jquery\"], factory);\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function($) {\n  var _ONE_DAY = 86400;\n  var _lang = {\n    am: \"am\",\n    pm: \"pm\",\n    AM: \"AM\",\n    PM: \"PM\",\n    decimal: \".\",\n    mins: \"mins\",\n    hr: \"hr\",\n    hrs: \"hrs\"\n  };\n\n  var _DEFAULTS = {\n    appendTo: \"body\",\n    className: null,\n    closeOnWindowScroll: false,\n    disableTextInput: false,\n    disableTimeRanges: [],\n    disableTouchKeyboard: false,\n    durationTime: null,\n    forceRoundTime: false,\n    maxTime: null,\n    minTime: null,\n    noneOption: false,\n    orientation: \"l\",\n    roundingFunction: function(seconds, settings) {\n      if (seconds === null) {\n        return null;\n      } else if (typeof settings.step !== \"number\") {\n        // TODO: nearest fit irregular steps\n        return seconds;\n      } else {\n        var offset = seconds % (settings.step * 60); // step is in minutes\n\n        var start = settings.minTime || 0;\n\n        // adjust offset by start mod step so that the offset is aligned not to 00:00 but to the start\n        offset -= start % (settings.step * 60);\n\n        if (offset >= settings.step * 30) {\n          // if offset is larger than a half step, round up\n          seconds += settings.step * 60 - offset;\n        } else {\n          // round down\n          seconds -= offset;\n        }\n\n        return _moduloSeconds(seconds, settings);\n      }\n    },\n    scrollDefault: null,\n    selectOnBlur: false,\n    show2400: false,\n    showDuration: false,\n    showOn: [\"click\", \"focus\"],\n    showOnFocus: true,\n    step: 30,\n    stopScrollPropagation: false,\n    timeFormat: \"g:ia\",\n    typeaheadHighlight: true,\n    useSelect: false,\n    wrapHours: true\n  };\n\n  var methods = {\n    init: function(options) {\n      return this.each(function() {\n        var self = $(this);\n\n        // pick up settings from data attributes\n        var attributeOptions = [];\n        for (var key in _DEFAULTS) {\n          if (self.data(key)) {\n            attributeOptions[key] = self.data(key);\n          }\n        }\n\n        var settings = $.extend({}, _DEFAULTS, options, attributeOptions);\n\n        if (settings.lang) {\n          _lang = $.extend(_lang, settings.lang);\n        }\n\n        settings = _parseSettings(settings);\n        self.data(\"timepicker-settings\", settings);\n        self.addClass(\"ui-timepicker-input\");\n\n        if (settings.useSelect) {\n          _render(self);\n        } else {\n          self.prop(\"autocomplete\", \"off\");\n          if (settings.showOn) {\n            for (var i in settings.showOn) {\n              self.on(settings.showOn[i] + \".timepicker\", methods.show);\n            }\n          }\n          self.on(\"change.timepicker\", _formatValue);\n          self.on(\"keydown.timepicker\", _keydownhandler);\n          self.on(\"keyup.timepicker\", _keyuphandler);\n          if (settings.disableTextInput) {\n            self.on(\"keydown.timepicker\", _disableTextInputHandler);\n          }\n          self.on(\"cut.timepicker\", _keyuphandler);\n          self.on(\"paste.timepicker\", _keyuphandler);\n\n          _formatValue.call(self.get(0), null, \"initial\");\n        }\n      });\n    },\n\n    show: function(e) {\n      var self = $(this);\n      var settings = self.data(\"timepicker-settings\");\n\n      if (e) {\n        e.preventDefault();\n      }\n\n      if (settings.useSelect) {\n        self.data(\"timepicker-list\").focus();\n        return;\n      }\n\n      if (_hideKeyboard(self)) {\n        // block the keyboard on mobile devices\n        self.blur();\n      }\n\n      var list = self.data(\"timepicker-list\");\n\n      // check if input is readonly\n      if (self.prop(\"readonly\")) {\n        return;\n      }\n\n      // check if list needs to be rendered\n      if (\n        !list ||\n        list.length === 0 ||\n        typeof settings.durationTime === \"function\"\n      ) {\n        _render(self);\n        list = self.data(\"timepicker-list\");\n      }\n\n      if (_isVisible(list)) {\n        return;\n      }\n\n      self.data(\"ui-timepicker-value\", self.val());\n      _setSelected(self, list);\n\n      // make sure other pickers are hidden\n      methods.hide();\n\n      // position the dropdown relative to the input\n      list.show();\n      var listOffset = {};\n\n      if (settings.orientation.match(/r/)) {\n        // right-align the dropdown\n        listOffset.left =\n          self.offset().left +\n          self.outerWidth() -\n          list.outerWidth() +\n          parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\n      } else {\n        // left-align the dropdown\n        listOffset.left =\n          self.offset().left +\n          parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\n      }\n\n      var verticalOrientation;\n      if (settings.orientation.match(/t/)) {\n        verticalOrientation = \"t\";\n      } else if (settings.orientation.match(/b/)) {\n        verticalOrientation = \"b\";\n      } else if (\n        self.offset().top + self.outerHeight(true) + list.outerHeight() >\n        $(window).height() + $(window).scrollTop()\n      ) {\n        verticalOrientation = \"t\";\n      } else {\n        verticalOrientation = \"b\";\n      }\n\n      if (verticalOrientation == \"t\") {\n        // position the dropdown on top\n        list.addClass(\"ui-timepicker-positioned-top\");\n        listOffset.top =\n          self.offset().top -\n          list.outerHeight() +\n          parseInt(list.css(\"marginTop\").replace(\"px\", \"\"), 10);\n      } else {\n        // put it under the input\n        list.removeClass(\"ui-timepicker-positioned-top\");\n        listOffset.top =\n          self.offset().top +\n          self.outerHeight() +\n          parseInt(list.css(\"marginTop\").replace(\"px\", \"\"), 10);\n      }\n\n      list.offset(listOffset);\n\n      // position scrolling\n      var selected = list.find(\".ui-timepicker-selected\");\n\n      if (!selected.length) {\n        var timeInt = _time2int(_getTimeValue(self));\n        if (timeInt !== null) {\n          selected = _findRow(self, list, timeInt);\n        } else if (settings.scrollDefault) {\n          selected = _findRow(self, list, settings.scrollDefault());\n        }\n      }\n\n      // if not found or disabled, intelligently find first selectable element\n      if (!selected.length || selected.hasClass(\"ui-timepicker-disabled\")) {\n        selected = list.find(\"li:not(.ui-timepicker-disabled):first\");\n      }\n\n      if (selected && selected.length) {\n        var topOffset =\n          list.scrollTop() + selected.position().top - selected.outerHeight();\n        list.scrollTop(topOffset);\n      } else {\n        list.scrollTop(0);\n      }\n\n      // prevent scroll propagation\n      if (settings.stopScrollPropagation) {\n        $(\n          document\n        ).on(\"wheel.ui-timepicker\", \".ui-timepicker-wrapper\", function(e) {\n          e.preventDefault();\n          var currentScroll = $(this).scrollTop();\n          $(this).scrollTop(currentScroll + e.originalEvent.deltaY);\n        });\n      }\n\n      // attach close handlers\n      $(document).on(\n        \"touchstart.ui-timepicker mousedown.ui-timepicker\",\n        _closeHandler\n      );\n      $(window).on(\"resize.ui-timepicker\", _closeHandler);\n      if (settings.closeOnWindowScroll) {\n        $(document).on(\"scroll.ui-timepicker\", _closeHandler);\n      }\n\n      self.trigger(\"showTimepicker\");\n\n      return this;\n    },\n\n    hide: function(e) {\n      var self = $(this);\n      var settings = self.data(\"timepicker-settings\");\n\n      if (settings && settings.useSelect) {\n        self.blur();\n      }\n\n      $(\".ui-timepicker-wrapper\").each(function() {\n        var list = $(this);\n        if (!_isVisible(list)) {\n          return;\n        }\n\n        var self = list.data(\"timepicker-input\");\n        var settings = self.data(\"timepicker-settings\");\n\n        if (settings && settings.selectOnBlur) {\n          _selectValue(self);\n        }\n\n        list.hide();\n        self.trigger(\"hideTimepicker\");\n      });\n\n      return this;\n    },\n\n    option: function(key, value) {\n      if (typeof key == \"string\" && typeof value == \"undefined\") {\n        return $(this).data(\"timepicker-settings\")[key];\n      }\n\n      return this.each(function() {\n        var self = $(this);\n        var settings = self.data(\"timepicker-settings\");\n        var list = self.data(\"timepicker-list\");\n\n        if (typeof key == \"object\") {\n          settings = $.extend(settings, key);\n        } else if (typeof key == \"string\") {\n          settings[key] = value;\n        }\n\n        settings = _parseSettings(settings);\n\n        self.data(\"timepicker-settings\", settings);\n\n        _formatValue.call(self.get(0), { type: \"change\" }, \"initial\");\n\n        if (list) {\n          list.remove();\n          self.data(\"timepicker-list\", false);\n        }\n\n        if (settings.useSelect) {\n          _render(self);\n        }\n      });\n    },\n\n    getSecondsFromMidnight: function() {\n      return _time2int(_getTimeValue(this));\n    },\n\n    getTime: function(relative_date) {\n      var self = this;\n\n      var time_string = _getTimeValue(self);\n      if (!time_string) {\n        return null;\n      }\n\n      var offset = _time2int(time_string);\n      if (offset === null) {\n        return null;\n      }\n\n      if (!relative_date) {\n        relative_date = new Date();\n      }\n\n      // construct a Date from relative date, and offset's time\n      var time = new Date(relative_date);\n      time.setHours(offset / 3600);\n      time.setMinutes((offset % 3600) / 60);\n      time.setSeconds(offset % 60);\n      time.setMilliseconds(0);\n\n      return time;\n    },\n\n    isVisible: function() {\n      var self = this;\n      var list = self.data(\"timepicker-list\");\n      return !!(list && _isVisible(list));\n    },\n\n    setTime: function(value) {\n      var self = this;\n      var settings = self.data(\"timepicker-settings\");\n\n      if (settings.forceRoundTime) {\n        var prettyTime = _roundAndFormatTime(_time2int(value), settings);\n      } else {\n        var prettyTime = _int2time(_time2int(value), settings);\n      }\n\n      if (value && prettyTime === null && settings.noneOption) {\n        prettyTime = value;\n      }\n\n      _setTimeValue(self, prettyTime, \"initial\");\n      _formatValue.call(self.get(0), { type: \"change\" }, \"initial\");\n\n      if (self.data(\"timepicker-list\")) {\n        _setSelected(self, self.data(\"timepicker-list\"));\n      }\n\n      return this;\n    },\n\n    remove: function() {\n      var self = this;\n\n      // check if this element is a timepicker\n      if (!self.hasClass(\"ui-timepicker-input\")) {\n        return;\n      }\n\n      var settings = self.data(\"timepicker-settings\");\n      self.removeAttr(\"autocomplete\", \"off\");\n      self.removeClass(\"ui-timepicker-input\");\n      self.removeData(\"timepicker-settings\");\n      self.off(\".timepicker\");\n\n      // timepicker-list won't be present unless the user has interacted with this timepicker\n      if (self.data(\"timepicker-list\")) {\n        self.data(\"timepicker-list\").remove();\n      }\n\n      if (settings.useSelect) {\n        self.show();\n      }\n\n      self.removeData(\"timepicker-list\");\n\n      return this;\n    }\n  };\n\n  // private methods\n\n  function _isVisible(elem) {\n    var el = elem[0];\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n  }\n\n  function _parseSettings(settings) {\n    if (settings.minTime) {\n      settings.minTime = _time2int(settings.minTime);\n    }\n\n    if (settings.maxTime) {\n      settings.maxTime = _time2int(settings.maxTime);\n    }\n\n    if (settings.durationTime && typeof settings.durationTime !== \"function\") {\n      settings.durationTime = _time2int(settings.durationTime);\n    }\n\n    if (settings.scrollDefault == \"now\") {\n      settings.scrollDefault = function() {\n        return settings.roundingFunction(_time2int(new Date()), settings);\n      };\n    } else if (\n      settings.scrollDefault &&\n      typeof settings.scrollDefault != \"function\"\n    ) {\n      var val = settings.scrollDefault;\n      settings.scrollDefault = function() {\n        return settings.roundingFunction(_time2int(val), settings);\n      };\n    } else if (settings.minTime) {\n      settings.scrollDefault = function() {\n        return settings.roundingFunction(settings.minTime, settings);\n      };\n    }\n\n    if (\n      $.type(settings.timeFormat) === \"string\" &&\n      settings.timeFormat.match(/[gh]/)\n    ) {\n      settings._twelveHourTime = true;\n    }\n\n    if (\n      settings.showOnFocus === false &&\n      settings.showOn.indexOf(\"focus\") != -1\n    ) {\n      settings.showOn.splice(settings.showOn.indexOf(\"focus\"), 1);\n    }\n\n    if (settings.disableTimeRanges.length > 0) {\n      // convert string times to integers\n      for (var i in settings.disableTimeRanges) {\n        settings.disableTimeRanges[i] = [\n          _time2int(settings.disableTimeRanges[i][0]),\n          _time2int(settings.disableTimeRanges[i][1])\n        ];\n      }\n\n      // sort by starting time\n      settings.disableTimeRanges = settings.disableTimeRanges.sort(function(\n        a,\n        b\n      ) {\n        return a[0] - b[0];\n      });\n\n      // merge any overlapping ranges\n      for (var i = settings.disableTimeRanges.length - 1; i > 0; i--) {\n        if (\n          settings.disableTimeRanges[i][0] <=\n          settings.disableTimeRanges[i - 1][1]\n        ) {\n          settings.disableTimeRanges[i - 1] = [\n            Math.min(\n              settings.disableTimeRanges[i][0],\n              settings.disableTimeRanges[i - 1][0]\n            ),\n            Math.max(\n              settings.disableTimeRanges[i][1],\n              settings.disableTimeRanges[i - 1][1]\n            )\n          ];\n          settings.disableTimeRanges.splice(i, 1);\n        }\n      }\n    }\n\n    return settings;\n  }\n\n  function _render(self) {\n    var settings = self.data(\"timepicker-settings\");\n    var list = self.data(\"timepicker-list\");\n\n    if (list && list.length) {\n      list.remove();\n      self.data(\"timepicker-list\", false);\n    }\n\n    if (settings.useSelect) {\n      list = $(\"<select />\", { class: \"ui-timepicker-select\" });\n      if (self.attr('name')) {\n        list.attr('name', 'ui-timepicker-' + self.attr('name'));\n      }\n      var wrapped_list = list;\n    } else {\n      list = $(\"<ul />\", { class: \"ui-timepicker-list\" });\n\n      var wrapped_list = $(\"<div />\", {\n        class: \"ui-timepicker-wrapper\",\n        tabindex: -1\n      });\n      wrapped_list.css({ display: \"none\", position: \"absolute\" }).append(list);\n    }\n\n    if (settings.noneOption) {\n      if (settings.noneOption === true) {\n        settings.noneOption = settings.useSelect ? \"Time...\" : \"None\";\n      }\n\n      if ($.isArray(settings.noneOption)) {\n        for (var i in settings.noneOption) {\n          if (parseInt(i, 10) == i) {\n            var noneElement = _generateNoneElement(\n              settings.noneOption[i],\n              settings.useSelect\n            );\n            list.append(noneElement);\n          }\n        }\n      } else {\n        var noneElement = _generateNoneElement(\n          settings.noneOption,\n          settings.useSelect\n        );\n        list.append(noneElement);\n      }\n    }\n\n    if (settings.className) {\n      wrapped_list.addClass(settings.className);\n    }\n\n    if (\n      (settings.minTime !== null || settings.durationTime !== null) &&\n      settings.showDuration\n    ) {\n      var stepval =\n        typeof settings.step == \"function\" ? \"function\" : settings.step;\n      wrapped_list.addClass(\"ui-timepicker-with-duration\");\n      wrapped_list.addClass(\"ui-timepicker-step-\" + settings.step);\n    }\n\n    var durStart = settings.minTime;\n    if (typeof settings.durationTime === \"function\") {\n      durStart = _time2int(settings.durationTime());\n    } else if (settings.durationTime !== null) {\n      durStart = settings.durationTime;\n    }\n    var start = settings.minTime !== null ? settings.minTime : 0;\n    var end =\n      settings.maxTime !== null ? settings.maxTime : start + _ONE_DAY - 1;\n\n    if (end < start) {\n      // make sure the end time is greater than start time, otherwise there will be no list to show\n      end += _ONE_DAY;\n    }\n\n    if (\n      end === _ONE_DAY - 1 &&\n      $.type(settings.timeFormat) === \"string\" &&\n      settings.show2400\n    ) {\n      // show a 24:00 option when using military time\n      end = _ONE_DAY;\n    }\n\n    var dr = settings.disableTimeRanges;\n    var drCur = 0;\n    var drLen = dr.length;\n\n    var stepFunc = settings.step;\n    if (typeof stepFunc != \"function\") {\n      stepFunc = function() {\n        return settings.step;\n      };\n    }\n\n    for (var i = start, j = 0; i <= end; j++, i += stepFunc(j) * 60) {\n      var timeInt = i;\n      var timeString = _int2time(timeInt, settings);\n\n      if (settings.useSelect) {\n        var row = $(\"<option />\", { value: timeString });\n        row.text(timeString);\n      } else {\n        var row = $(\"<li />\");\n        row.addClass(\n          timeInt % _ONE_DAY < _ONE_DAY / 2\n            ? \"ui-timepicker-am\"\n            : \"ui-timepicker-pm\"\n        );\n        row.data(\"time\", _moduloSeconds(timeInt, settings));\n        row.text(timeString);\n      }\n\n      if (\n        (settings.minTime !== null || settings.durationTime !== null) &&\n        settings.showDuration\n      ) {\n        var durationString = _int2duration(i - durStart, settings.step);\n        if (settings.useSelect) {\n          row.text(row.text() + \" (\" + durationString + \")\");\n        } else {\n          var duration = $(\"<span />\", { class: \"ui-timepicker-duration\" });\n          duration.text(\" (\" + durationString + \")\");\n          row.append(duration);\n        }\n      }\n\n      if (drCur < drLen) {\n        if (timeInt >= dr[drCur][1]) {\n          drCur += 1;\n        }\n\n        if (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\n          if (settings.useSelect) {\n            row.prop(\"disabled\", true);\n          } else {\n            row.addClass(\"ui-timepicker-disabled\");\n          }\n        }\n      }\n\n      list.append(row);\n    }\n\n    wrapped_list.data(\"timepicker-input\", self);\n    self.data(\"timepicker-list\", wrapped_list);\n\n    if (settings.useSelect) {\n      if (self.val()) {\n        list.val(_roundAndFormatTime(_time2int(self.val()), settings));\n      }\n\n      list.on(\"focus\", function() {\n        $(this)\n          .data(\"timepicker-input\")\n          .trigger(\"showTimepicker\");\n      });\n      list.on(\"blur\", function() {\n        $(this)\n          .data(\"timepicker-input\")\n          .trigger(\"hideTimepicker\");\n      });\n      list.on(\"change\", function() {\n        _setTimeValue(self, $(this).val(), \"select\");\n      });\n\n      _setTimeValue(self, list.val(), \"initial\");\n      self.hide().after(list);\n    } else {\n      var appendTo = settings.appendTo;\n      if (typeof appendTo === \"string\") {\n        appendTo = $(appendTo);\n      } else if (typeof appendTo === \"function\") {\n        appendTo = appendTo(self);\n      }\n      appendTo.append(wrapped_list);\n      _setSelected(self, list);\n\n      list.on(\"mousedown click\", \"li\", function(e) {\n        // hack: temporarily disable the focus handler\n        // to deal with the fact that IE fires 'focus'\n        // events asynchronously\n        self.off(\"focus.timepicker\");\n        self.on(\"focus.timepicker-ie-hack\", function() {\n          self.off(\"focus.timepicker-ie-hack\");\n          self.on(\"focus.timepicker\", methods.show);\n        });\n\n        if (!_hideKeyboard(self)) {\n          self[0].focus();\n        }\n\n        // make sure only the clicked row is selected\n        list.find(\"li\").removeClass(\"ui-timepicker-selected\");\n        $(this).addClass(\"ui-timepicker-selected\");\n\n        if (_selectValue(self)) {\n          self.trigger(\"hideTimepicker\");\n\n          list.on(\"mouseup.timepicker click.timepicker\", \"li\", function(e) {\n            list.off(\"mouseup.timepicker click.timepicker\");\n            wrapped_list.hide();\n          });\n        }\n      });\n    }\n  }\n\n  function _generateNoneElement(optionValue, useSelect) {\n    var label, className, value;\n\n    if (typeof optionValue == \"object\") {\n      label = optionValue.label;\n      className = optionValue.className;\n      value = optionValue.value;\n    } else if (typeof optionValue == \"string\") {\n      label = optionValue;\n      value = '';\n    } else {\n      $.error(\"Invalid noneOption value\");\n    }\n\n    if (useSelect) {\n      return $(\"<option />\", {\n        value: value,\n        class: className,\n        text: label\n      });\n    } else {\n      return $(\"<li />\", {\n        class: className,\n        text: label\n      }).data(\"time\", String(value));\n    }\n  }\n\n  function _roundAndFormatTime(seconds, settings) {\n    seconds = settings.roundingFunction(seconds, settings);\n    if (seconds !== null) {\n      return _int2time(seconds, settings);\n    }\n  }\n\n  // event handler to decide whether to close timepicker\n  function _closeHandler(e) {\n    if (e.target == window) {\n      // mobile Chrome fires focus events against window for some reason\n      return;\n    }\n\n    var target = $(e.target);\n\n    if (\n      target.closest(\".ui-timepicker-input\").length ||\n      target.closest(\".ui-timepicker-wrapper\").length\n    ) {\n      // active timepicker was focused. ignore\n      return;\n    }\n\n    methods.hide();\n    $(document).unbind(\".ui-timepicker\");\n    $(window).unbind(\".ui-timepicker\");\n  }\n\n  function _hideKeyboard(self) {\n    var settings = self.data(\"timepicker-settings\");\n    return (\n      (window.navigator.msMaxTouchPoints || \"ontouchstart\" in document) &&\n      settings.disableTouchKeyboard\n    );\n  }\n\n  function _findRow(self, list, value) {\n    if (!value && value !== 0) {\n      return false;\n    }\n\n    var settings = self.data(\"timepicker-settings\");\n    var out = false;\n    var value = settings.roundingFunction(value, settings);\n\n    // loop through the menu items\n    list.find(\"li\").each(function(i, obj) {\n      var jObj = $(obj);\n      if (typeof jObj.data(\"time\") != \"number\") {\n        return;\n      }\n\n      if (jObj.data(\"time\") == value) {\n        out = jObj;\n        return false;\n      }\n    });\n\n    return out;\n  }\n\n  function _setSelected(self, list) {\n    list.find(\"li\").removeClass(\"ui-timepicker-selected\");\n\n    var settings = self.data(\"timepicker-settings\");\n    var timeValue = _time2int(_getTimeValue(self), settings);\n    if (timeValue === null) {\n      return;\n    }\n\n    var selected = _findRow(self, list, timeValue);\n    if (selected) {\n      var topDelta = selected.offset().top - list.offset().top;\n\n      if (\n        topDelta + selected.outerHeight() > list.outerHeight() ||\n        topDelta < 0\n      ) {\n        list.scrollTop(\n          list.scrollTop() + selected.position().top - selected.outerHeight()\n        );\n      }\n\n      if (settings.forceRoundTime || selected.data(\"time\") === timeValue) {\n        selected.addClass(\"ui-timepicker-selected\");\n      }\n    }\n  }\n\n  function _formatValue(e, origin) {\n    if (origin == \"timepicker\") {\n      return;\n    }\n\n    var self = $(this);\n\n    if (this.value === \"\") {\n      _setTimeValue(self, null, origin);\n      return;\n    }\n\n    if (self.is(\":focus\") && (!e || e.type != \"change\")) {\n      return;\n    }\n\n    var settings = self.data(\"timepicker-settings\");\n    var seconds = _time2int(this.value, settings);\n\n    if (seconds === null) {\n      self.trigger(\"timeFormatError\");\n      return;\n    }\n\n    var rangeError = false;\n    // check that the time in within bounds\n    if (\n      settings.minTime !== null &&\n      settings.maxTime !== null &&\n      (seconds < settings.minTime || seconds > settings.maxTime)\n    ) {\n      rangeError = true;\n    }\n\n    // check that time isn't within disabled time ranges\n    $.each(settings.disableTimeRanges, function() {\n      if (seconds >= this[0] && seconds < this[1]) {\n        rangeError = true;\n        return false;\n      }\n    });\n\n    if (settings.forceRoundTime) {\n      var roundSeconds = settings.roundingFunction(seconds, settings);\n      if (roundSeconds != seconds) {\n        seconds = roundSeconds;\n        origin = null;\n      }\n    }\n\n    var prettyTime = _int2time(seconds, settings);\n\n    if (rangeError) {\n      if (\n        _setTimeValue(self, prettyTime, \"error\") ||\n        (e && e.type == \"change\")\n      ) {\n        self.trigger(\"timeRangeError\");\n      }\n    } else {\n      _setTimeValue(self, prettyTime, origin);\n    }\n  }\n\n  function _getTimeValue(self) {\n    if (self.is(\"input\")) {\n      return self.val();\n    } else {\n      // use the element's data attributes to store values\n      return self.data(\"ui-timepicker-value\");\n    }\n  }\n\n  function _setTimeValue(self, value, source) {\n    if (self.is(\"input\")) {\n      self.val(value);\n\n      var settings = self.data(\"timepicker-settings\");\n      if (settings.useSelect && source != \"select\" && self.data(\"timepicker-list\")) {\n        self\n          .data(\"timepicker-list\")\n          .val(_roundAndFormatTime(_time2int(value), settings));\n      }\n    }\n\n    if (self.data(\"ui-timepicker-value\") != value) {\n      self.data(\"ui-timepicker-value\", value);\n      if (source == \"select\") {\n        self\n          .trigger(\"selectTime\")\n          .trigger(\"changeTime\")\n          .trigger(\"change\", \"timepicker\");\n      } else if ([\"error\", \"initial\"].indexOf(source) == -1) {\n        self.trigger(\"changeTime\");\n      }\n\n      return true;\n    } else {\n      if ([\"error\", \"initial\"].indexOf(source) == -1) {\n        self.trigger(\"selectTime\");\n      }\n      return false;\n    }\n  }\n\n  /*\n\t*  Filter freeform input\n\t*/\n  function _disableTextInputHandler(e) {\n    switch (e.keyCode) {\n      case 13: // return\n      case 9: //tab\n        return;\n\n      default:\n        e.preventDefault();\n    }\n  }\n\n  /*\n\t*  Keyboard navigation via arrow keys\n\t*/\n  function _keydownhandler(e) {\n    var self = $(this);\n    var list = self.data(\"timepicker-list\");\n\n    if (!list || !_isVisible(list)) {\n      if (e.keyCode == 40) {\n        // show the list!\n        methods.show.call(self.get(0));\n        list = self.data(\"timepicker-list\");\n        if (!_hideKeyboard(self)) {\n          self.focus();\n        }\n      } else {\n        return true;\n      }\n    }\n\n    switch (e.keyCode) {\n      case 13: // return\n        if (_selectValue(self)) {\n          _formatValue.call(self.get(0), { type: \"change\" });\n          methods.hide.apply(this);\n        }\n\n        e.preventDefault();\n        return false;\n\n      case 38: // up\n        var selected = list.find(\".ui-timepicker-selected\");\n\n        if (!selected.length) {\n          list.find(\"li\").each(function(i, obj) {\n            if ($(obj).position().top > 0) {\n              selected = $(obj);\n              return false;\n            }\n          });\n          selected.addClass(\"ui-timepicker-selected\");\n        } else if (!selected.is(\":first-child\")) {\n          selected.removeClass(\"ui-timepicker-selected\");\n          selected.prev().addClass(\"ui-timepicker-selected\");\n\n          if (selected.prev().position().top < selected.outerHeight()) {\n            list.scrollTop(list.scrollTop() - selected.outerHeight());\n          }\n        }\n\n        return false;\n\n      case 40: // down\n        selected = list.find(\".ui-timepicker-selected\");\n\n        if (selected.length === 0) {\n          list.find(\"li\").each(function(i, obj) {\n            if ($(obj).position().top > 0) {\n              selected = $(obj);\n              return false;\n            }\n          });\n\n          selected.addClass(\"ui-timepicker-selected\");\n        } else if (!selected.is(\":last-child\")) {\n          selected.removeClass(\"ui-timepicker-selected\");\n          selected.next().addClass(\"ui-timepicker-selected\");\n\n          if (\n            selected.next().position().top + 2 * selected.outerHeight() >\n            list.outerHeight()\n          ) {\n            list.scrollTop(list.scrollTop() + selected.outerHeight());\n          }\n        }\n\n        return false;\n\n      case 27: // escape\n        list.find(\"li\").removeClass(\"ui-timepicker-selected\");\n        methods.hide();\n        break;\n\n      case 9: //tab\n        methods.hide();\n        break;\n\n      default:\n        return true;\n    }\n  }\n\n  /*\n\t*\tTime typeahead\n\t*/\n  function _keyuphandler(e) {\n    var self = $(this);\n    var list = self.data(\"timepicker-list\");\n    var settings = self.data(\"timepicker-settings\");\n\n    if (!list || !_isVisible(list) || settings.disableTextInput) {\n      return true;\n    }\n\n    if (e.type === \"paste\" || e.type === \"cut\") {\n      setTimeout(function() {\n        if (settings.typeaheadHighlight) {\n          _setSelected(self, list);\n        } else {\n          list.hide();\n        }\n      }, 0);\n      return;\n    }\n\n    switch (e.keyCode) {\n      case 96: // numpad numerals\n      case 97:\n      case 98:\n      case 99:\n      case 100:\n      case 101:\n      case 102:\n      case 103:\n      case 104:\n      case 105:\n      case 48: // numerals\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n      case 65: // a\n      case 77: // m\n      case 80: // p\n      case 186: // colon\n      case 8: // backspace\n      case 46: // delete\n        if (settings.typeaheadHighlight) {\n          _setSelected(self, list);\n        } else {\n          list.hide();\n        }\n        break;\n    }\n  }\n\n  function _selectValue(self) {\n    var settings = self.data(\"timepicker-settings\");\n    var list = self.data(\"timepicker-list\");\n    var timeValue = null;\n\n    var cursor = list.find(\".ui-timepicker-selected\");\n\n    if (cursor.hasClass(\"ui-timepicker-disabled\")) {\n      return false;\n    }\n\n    if (cursor.length) {\n      // selected value found\n      timeValue = cursor.data(\"time\");\n    }\n\n    if (timeValue !== null) {\n      if (typeof timeValue != \"string\") {\n        timeValue = _int2time(timeValue, settings);\n      }\n\n      _setTimeValue(self, timeValue, \"select\");\n    }\n\n    return true;\n  }\n\n  function _int2duration(seconds, step) {\n    seconds = Math.abs(seconds);\n    var minutes = Math.round(seconds / 60),\n      duration = [],\n      hours,\n      mins;\n\n    if (minutes < 60) {\n      // Only show (x mins) under 1 hour\n      duration = [minutes, _lang.mins];\n    } else {\n      hours = Math.floor(minutes / 60);\n      mins = minutes % 60;\n\n      // Show decimal notation (eg: 1.5 hrs) for 30 minute steps\n      if (step == 30 && mins == 30) {\n        hours += _lang.decimal + 5;\n      }\n\n      duration.push(hours);\n      duration.push(hours == 1 ? _lang.hr : _lang.hrs);\n\n      // Show remainder minutes notation (eg: 1 hr 15 mins) for non-30 minute steps\n      // and only if there are remainder minutes to show\n      if (step != 30 && mins) {\n        duration.push(mins);\n        duration.push(_lang.mins);\n      }\n    }\n\n    return duration.join(\" \");\n  }\n\n  function _int2time(timeInt, settings) {\n    if (typeof timeInt != \"number\") {\n      return null;\n    }\n\n    var seconds = parseInt(timeInt % 60),\n      minutes = parseInt((timeInt / 60) % 60),\n      hours = parseInt((timeInt / (60 * 60)) % 24);\n\n    var time = new Date(1970, 0, 2, hours, minutes, seconds, 0);\n\n    if (isNaN(time.getTime())) {\n      return null;\n    }\n\n    if ($.type(settings.timeFormat) === \"function\") {\n      return settings.timeFormat(time);\n    }\n\n    var output = \"\";\n    var hour, code;\n    for (var i = 0; i < settings.timeFormat.length; i++) {\n      code = settings.timeFormat.charAt(i);\n      switch (code) {\n        case \"a\":\n          output += time.getHours() > 11 ? _lang.pm : _lang.am;\n          break;\n\n        case \"A\":\n          output += time.getHours() > 11 ? _lang.PM : _lang.AM;\n          break;\n\n        case \"g\":\n          hour = time.getHours() % 12;\n          output += hour === 0 ? \"12\" : hour;\n          break;\n\n        case \"G\":\n          hour = time.getHours();\n          if (timeInt === _ONE_DAY) hour = settings.show2400 ? 24 : 0;\n          output += hour;\n          break;\n\n        case \"h\":\n          hour = time.getHours() % 12;\n\n          if (hour !== 0 && hour < 10) {\n            hour = \"0\" + hour;\n          }\n\n          output += hour === 0 ? \"12\" : hour;\n          break;\n\n        case \"H\":\n          hour = time.getHours();\n          if (timeInt === _ONE_DAY) hour = settings.show2400 ? 24 : 0;\n          output += hour > 9 ? hour : \"0\" + hour;\n          break;\n\n        case \"i\":\n          var minutes = time.getMinutes();\n          output += minutes > 9 ? minutes : \"0\" + minutes;\n          break;\n\n        case \"s\":\n          seconds = time.getSeconds();\n          output += seconds > 9 ? seconds : \"0\" + seconds;\n          break;\n\n        case \"\\\\\":\n          // escape character; add the next character and skip ahead\n          i++;\n          output += settings.timeFormat.charAt(i);\n          break;\n\n        default:\n          output += code;\n      }\n    }\n\n    return output;\n  }\n\n  function _time2int(timeString, settings) {\n    if (timeString === \"\" || timeString === null) return null;\n    if (typeof timeString == \"object\") {\n      return (\n        timeString.getHours() * 3600 +\n        timeString.getMinutes() * 60 +\n        timeString.getSeconds()\n      );\n    }\n    if (typeof timeString != \"string\") {\n      return timeString;\n    }\n\n    timeString = timeString.toLowerCase().replace(/[\\s\\.]/g, \"\");\n\n    // if the last character is an \"a\" or \"p\", add the \"m\"\n    if (timeString.slice(-1) == \"a\" || timeString.slice(-1) == \"p\") {\n      timeString += \"m\";\n    }\n\n    var ampmRegex =\n      \"(\" +\n      _lang.am.replace(\".\", \"\") +\n      \"|\" +\n      _lang.pm.replace(\".\", \"\") +\n      \"|\" +\n      _lang.AM.replace(\".\", \"\") +\n      \"|\" +\n      _lang.PM.replace(\".\", \"\") +\n      \")?\";\n\n    // try to parse time input\n    var pattern = new RegExp(\n      \"^\" +\n        ampmRegex +\n        \"([0-9]?[0-9])\\\\W?([0-5][0-9])?\\\\W?([0-5][0-9])?\" +\n        ampmRegex +\n        \"$\"\n    );\n\n    var time = timeString.match(pattern);\n    if (!time) {\n      return null;\n    }\n\n    var hour = parseInt(time[2] * 1, 10);\n    var ampm = time[1] || time[5];\n    var hours = hour;\n    var minutes = time[3] * 1 || 0;\n    var seconds = time[4] * 1 || 0;\n\n    if (hour <= 12 && ampm) {\n      var isPm = ampm == _lang.pm || ampm == _lang.PM;\n\n      if (hour == 12) {\n        hours = isPm ? 12 : 0;\n      } else {\n        hours = hour + (isPm ? 12 : 0);\n      }\n    } else if (settings) {\n      var t = hour * 3600 + minutes * 60 + seconds;\n      if (t >= _ONE_DAY + (settings.show2400 ? 1 : 0)) {\n        if (settings.wrapHours === false) {\n          return null;\n        }\n\n        hours = hour % 24;\n      }\n    }\n\n    var timeInt = hours * 3600 + minutes * 60 + seconds;\n\n    // if no am/pm provided, intelligently guess based on the scrollDefault\n    if (\n      hour < 12 &&\n      !ampm &&\n      settings &&\n      settings._twelveHourTime &&\n      settings.scrollDefault\n    ) {\n      var delta = timeInt - settings.scrollDefault();\n      if (delta < 0 && delta >= _ONE_DAY / -2) {\n        timeInt = (timeInt + _ONE_DAY / 2) % _ONE_DAY;\n      }\n    }\n\n    return timeInt;\n  }\n\n  function _pad2(n) {\n    return (\"0\" + n).slice(-2);\n  }\n\n  function _moduloSeconds(seconds, settings) {\n    if (seconds == _ONE_DAY && settings.show2400) {\n      return seconds;\n    }\n\n    return seconds % _ONE_DAY;\n  }\n\n  // Plugin entry\n  $.fn.timepicker = function(method) {\n    if (!this.length) return this;\n    if (methods[method]) {\n      // check if this element is a timepicker\n      if (!this.hasClass(\"ui-timepicker-input\")) {\n        return this;\n      }\n      return methods[method].apply(\n        this,\n        Array.prototype.slice.call(arguments, 1)\n      );\n    } else if (typeof method === \"object\" || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error(\"Method \" + method + \" does not exist on jQuery.timepicker\");\n    }\n  };\n});\n"]}